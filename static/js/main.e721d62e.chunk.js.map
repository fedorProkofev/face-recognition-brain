{"version":3,"sources":["components/Logo/Logo.png","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","className","onClick","SignIn","id","type","name","value","Register","Logo","options","max","style","height","width","alt","src","logoImage","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onChange","FaceRecognition","imageUrl","boxes","BoxDivs","length","entries","i","box","push","key","top","right","bottom","left","particlesOptions","particles","number","density","enable","value_area","size","app","Clarifai","App","apiKey","route","setState","calculateFaceLocation","data","regions","outputs","faceBoxes","clarifaiBox","region_info","bounding_box","top_row","right_col","bottom_row","left_col","displayFaceBoxes","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e721d62e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.678569f2.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\tif (isSignedIn) {\r\n\t\treturn(\r\n\t\t\t<nav className='flex justify-end'>\r\n\t\t\t\t<p onClick={ () => onRouteChange('signout') } className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t} else {\r\n\t\treturn(\r\n\t\t\t<nav className='flex justify-end'>\r\n\t\t\t\t<p onClick={ () => onRouteChange('signin') } className='f3 link dim black underline pa3 pointer'>SignIn</p>\r\n\t\t\t\t<p onClick={ () => onRouteChange('register') } className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n\treturn(\r\n\t\t<div className='pa4 black mw5 center br3 pa4-ns mv3 ba b--black-10 tc'>\r\n\t\t\t<div className='measure center'>\r\n\t\t\t\t<fieldset id='sign_in' className='ba b--transparent ph0 mh0'>\r\n\t\t\t\t\t<legend className='f4 fw6 ph0 mh0'>Sign In</legend>\r\n\t\t\t\t\t<div className='mt3'>\r\n\t\t\t\t\t\t<label className='db fw6 lh-copy f6'>Email</label>\r\n\t\t\t\t\t\t<input className='pa2 input-reset ba bg-transparent hover-white w-100' type='email' name='email-address'  id='email-address' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mv3'>\r\n\t\t\t\t\t\t<label className='db fw6 lh-copy f6'>Password</label>\r\n\t\t\t\t\t\t<input className='b pa2 input-reset ba bg-transparent hover-white w-100' type='password' name='password'  id='password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div className=''>\r\n\t\t\t\t\t<input onClick={ () => onRouteChange('home') } className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib' type='submit' value='Sign in' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='lh-copy mt3'>\r\n\t\t\t\t\t<p onClick={ () => onRouteChange('register') } className='f6 link dim black db pointer'>Register</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n\treturn(\r\n\t\t<div className='pa4 black mw5 center br3 pa4-ns mv3 ba b--black-10 tc'>\r\n\t\t\t<div className='measure center'>\r\n\t\t\t\t<fieldset id='sign_in' className='ba b--transparent ph0 mh0'>\r\n\t\t\t\t\t<legend className='f4 fw6 ph0 mh0'>Register</legend>\r\n\t\t\t\t\t<div className='mt3'>\r\n\t\t\t\t\t\t<label className='db fw6 lh-copy f6'>Name</label>\r\n\t\t\t\t\t\t<input className='pa2 input-reset ba bg-transparent hover-white w-100' type='text' name='name'  id='name' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mt3'>\r\n\t\t\t\t\t\t<label className='db fw6 lh-copy f6'>Email</label>\r\n\t\t\t\t\t\t<input className='pa2 input-reset ba bg-transparent hover-white w-100' type='email' name='email-address'  id='email-address' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mv3'>\r\n\t\t\t\t\t\t<label className='db fw6 lh-copy f6'>Password</label>\r\n\t\t\t\t\t\t<input className='b pa2 input-reset ba bg-transparent hover-white w-100' type='password' name='password'  id='password' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div className=''>\r\n\t\t\t\t\t<input onClick={ () => onRouteChange('home') } className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib' type='submit' value='Register' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport logoImage from './Logo.png';\r\n\r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div className=\"ma4 mt0\">\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t\t<div className=\"Tilt-inner pa3\">\r\n\t\t\t\t\t<img alt='logo' src={ logoImage } />\r\n\t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn(\r\n\t\t<div className='tc'>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`Fyodor, your current rank is...`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{`#5`}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn(\r\n\t\t<div className=\"tc\">\r\n\t\t\t<p className='f3 white'>\r\n\t\t\t\t{`This smart app will detect the face on photo. Give it a try!`}\r\n\t\t\t</p>\r\n\t\t\t<div className=\"flex justify-center\">\r\n\t\t\t\t<div className=\"pa3 shadow-1\">\r\n\t\t\t\t\t<input className='input-reset ba b--white f4 ma2 pa2 mb2 db white bg-transparent dib' type='text' onChange={ onInputChange } />\r\n\t\t\t\t\t<button className='ma2 ba b--white f4 pa2 link pointer ph3 pv2 dib white bg-transparent bg-animate hover-bg-light-purple' onClick={ onButtonSubmit }>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n\tconst BoxDivs = [];\r\n\tif (boxes.length > 0) {\r\n\t\tfor (let [i,box] of boxes.entries()) {\r\n\t\t\tBoxDivs.push(\r\n\t\t\t\t<div key={i} className='bounding-box absolute pointer flex flex-wrap justify-center ba bw1 b--near-white' style={{top: box.top, right: box.right, bottom: box.bottom, left: box.left}}></div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='tc flex justify-center ma3'>\r\n\t\t\t<div className='relative white f3 dib'>\r\n\t\t\t\t<img className='shadow-1' id='input-image' width='500px' alt='Face Recognition' src={ imageUrl } />\r\n\t\t\t\t\t{ BoxDivs }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport 'tachyons';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    size: {\n      value: 3\n    }\n  }\n}\n\nconst app = new Clarifai.App({\n  apiKey: '8cf6f2ada0ba459e906cac41005fb858'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      boxes: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({route: route});\n  }\n\n  calculateFaceLocation = (data) => {\n    const regions = data.outputs[0].data.regions;\n    const faceBoxes = [];\n    for (let region of regions) {\n      let clarifaiBox = region.region_info.bounding_box;\n      let box = {\n        top: (clarifaiBox.top_row * 100) +'%',\n        right: (100 - (clarifaiBox.right_col * 100)) +'%',\n        bottom: (100 - (clarifaiBox.bottom_row * 100)) +'%',\n        left: (clarifaiBox.left_col * 100) +'%'\n      }\n      faceBoxes.push(box);\n    }\n    return faceBoxes\n  }\n\n  displayFaceBoxes = (boxes) => {\n    this.setState({boxes: boxes});\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => this.displayFaceBoxes(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, boxes, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particle fixed top-0 right-0 bottom-0 left-0'\n          params= { particlesOptions }\n        />\n        <Navigation\n          isSignedIn = { isSignedIn }\n          onRouteChange = { this.onRouteChange }\n        />\n        { route === 'home'\n          ? <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange= { this.onInputChange }\n              onButtonSubmit= { this.onButtonSubmit }\n            />\n            <FaceRecognition\n              imageUrl= { imageUrl }\n              boxes= { boxes } />\n          </div>\n          : (\n            route === 'signin'\n            ? <SignIn onRouteChange = { this.onRouteChange } />\n            : <Register onRouteChange = { this.onRouteChange } />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}